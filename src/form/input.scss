$input-text-color: $text-strong !default;
$input-background-color: $scheme-main !default;
$input-border-color: $border !default;
$input-height: $control-height !default;
$input-shadow: inset 0 0.0625em 0.125em rgba($scheme-invert, 0.05) !default;
$input-placeholder-color: sarumaRgba($input-text-color, 0.3) !default;

$input-hover-color: $text-strong !default;
$input-hover-border-color: $border-hover !default;

$input-focus-text-color: $text-strong !default;
$input-focus-border-color: $link !default;
$input-focus-box-shadow-size: 0 0 0 0.125em !default;
$input-focus-box-shadow-color: sarumaRgba($link, 0.25) !default;


$input-disabled-text-color: $text-light !default;
$input-disabled-background-color: $background !default;
$input-disabled-border-color: $background !default;
$input-disabled-placeholder-color: sarumaRgba($input-disabled-text-color, 0.3) !default;

$input-arrow: $link !default;

$input-icon-color: $border !default;
$input-icon-active-color: $text !default;

$input-radius: $radius !default;

/*Textarea*/

$textarea-padding: $control-padding-horizontal !default;
$textarea-max-height: 40em !default;
$textarea-min-height: 8em !default;


@mixin input {
    @extend %control;
    background-color: $input-background-color;
    border-color: $input-border-color;
    border-radius: $input-radius;
    color: $input-text-color;
    @include placeholder {
        color: $input-placeholder-color;
    }
    &:hover,
    &.s-hovered {
        border-color: $input-hover-border-color;
    }
    &:focus,
    &.s-focused,
    &:active,
    &.s-active {
        border-color: $input-focus-border-color;
        box-shadow: $input-focus-box-shadow-size $input-focus-box-shadow-color;
    }
    &[disabled],
    fieldset[disabled] & {
        background-color: $input-disabled-background-color;
        border-color: $input-disabled-border-color;
        box-shadow: none;
        color: $input-disabled-text-color;
        @include placeholder {
            color: $input-disabled-placeholder-color;
        }
    }
}

%input {
    @include input;
}


%input-textarea {
    @extend %input;
    box-shadow: $input-shadow;
    max-width: 100%;
    width: 100%;

    &[readonly] {
        box-shadow: none;
    }

    // Colors
    @each $name, $pair in $colors {
        $color: nth($pair, 1);
        &.s-#{$name} {
            border-color: $color;

            &:focus,
            &.s-focused,
            &:active,
            &.s-active {
                box-shadow: $input-focus-box-shadow-size sarumaRgba($color, 0.25);
            }
        }
    }
    // Sizes
    &.s-small {
        @include control-small;
    }

    &.s-medium {
        @include control-medium;
    }

    &.s-large {
        @include control-large;
    }

    // Modifiers
    &.s-fullwidth {
        display: block;
        width: 100%;
    }

    &.s-inline {
        display: inline;
        width: auto;
    }
}

.s-input {
    @extend %input-textarea;

    &.s-rounded {
        border-radius: $radius-rounded;
        padding-left: calc(#{$control-padding-horizontal} + 0.375em);
        padding-right: calc(#{$control-padding-horizontal} + 0.375em);
    }

    &.s-static {
        background-color: transparent;
        border-color: transparent;
        box-shadow: none;
        padding-left: 0;
        padding-right: 0;
    }

    &__textarea {
        display: block;
        max-width: 100%;
        min-width: 100%;
        padding: $textarea-padding;
        resize: vertical;

        &:not([ rows ]) {
            max-height: $textarea-max-height;
            min-height: $textarea-min-height;
        }

        &[ rows ] {
            height: initial
        }

        // Modifiers
        &.s-fixed-size {
            resize: none
        }

    }

}


